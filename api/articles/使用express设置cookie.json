{"title":"使用express设置cookie","slug":"使用express设置cookie","date":"2018-07-24T03:23:14.000Z","updated":"2018-07-24T03:29:21.021Z","comments":true,"excerpt":"","content":"<h1 id=\"什么是cookie\"><a href=\"#什么是cookie\" class=\"headerlink\" title=\"什么是cookie\"></a>什么是cookie</h1><p>cookie是客户端请求服务器时，客户端向服务器发送的一些信息，多配合session配合用于用户验证。</p>\n<p>cookie可以在浏览器中查看（chrome浏览器开发者工具）：</p>\n<p><img src=\"http://p6894qyp6.bkt.clouddn.com/cookie-1.png\" alt=\"\"></p>\n<h1 id=\"为什么需要cookie\"><a href=\"#为什么需要cookie\" class=\"headerlink\" title=\"为什么需要cookie\"></a>为什么需要cookie</h1><p>http协议是无状态的，不能记录客户端与服务器之间的连接信息，如果我们需要保存用户的登录状态，那么就需要在客户端向服务器发送一个验证，表示该用户已登录，这时就需要cookie出场了<br>。</p>\n<p>cookie是又时限的，有一个属性maxAge可以设置cookie的存储时间，超过时间后cookie会被删除，默认的是浏览器关闭时清除cookie。cookie一般用于用户的自动登录，记住密码等，将账户信息保存在cookie中，登录时cookie被传送到服务器完成自动登录。</p>\n<h1 id=\"express如何设置cookie\"><a href=\"#express如何设置cookie\" class=\"headerlink\" title=\"express如何设置cookie\"></a>express如何设置cookie</h1><h2 id=\"所需模块\"><a href=\"#所需模块\" class=\"headerlink\" title=\"所需模块\"></a>所需模块</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var express=require(&quot;express&quot;);</span><br><span class=\"line\">var cookieParase = require(&apos;cookie-parser&apos;);</span><br><span class=\"line\">var bodyParser = require(&apos;body-parser&apos;);</span><br></pre></td></tr></table></figure>\n<p>需要的模块使用npm install + 模块名即可安装</p>\n<h2 id=\"设置的主要参数\"><a href=\"#设置的主要参数\" class=\"headerlink\" title=\"设置的主要参数\"></a>设置的主要参数</h2><ul>\n<li><p>name: 类型为String</p>\n</li>\n<li><p>value: 类型为String和Object，如果是Object会在cookie.serialize()之前自动调用JSON.stringify对其进行处理</p>\n</li>\n<li><p>Option: 类型为对象，可使用的属性如下</p>\n</li>\n<li><p>domain：cookie在什么域名下有效，类型为String,。默认为网站域名</p>\n</li>\n<li><p>expires: cookie过期时间，类型为Date。如果没有设置或者设置为0，那么该cookie只在这个这个session有效，即关闭浏览器后，这个cookie会被浏览器删除。</p>\n</li>\n<li><p>httpOnly: 只能被web server访问，类型Boolean,禁止客户端JavaScript的访问，禁止后不能使用document.cookie。</p>\n</li>\n<li><p>maxAge: 实现expires的功能，设置cookie过期的时间，类型为String，指明从现在开始，多少毫秒以后，cookie到期。</p>\n</li>\n<li><p>path: cookie在什么路径下有效，默认为’/’，类型为String</p>\n</li>\n<li><p>secure：只能被HTTPS使用，类型Boolean，默认为false</p>\n</li>\n<li><p>signed:使用签名，类型Boolean，默认为false。express会使用req.secret来完成签名，需要cookie-parser配合使用</p>\n</li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><ul>\n<li><p>设置cookie</p>\n<p>如：res.cookie(‘id’,1,{ expires: new Date(Date.now() + 100), httpOnly: true });</p>\n</li>\n</ul>\n<blockquote>\n<p>res.cookie(name, value [, options]);</p>\n</blockquote>\n<blockquote>\n<p>name 是 cookie 名，value 是 cookie 值，可以是 json 对象或字符串。</p>\n</blockquote>\n<ul>\n<li><p>获取cookie</p>\n<p>req.cookies.key(获取名称为key的cookie的值)    或   req.cookies</p>\n</li>\n<li><p>删除cookie</p>\n<p>res.clearCookie(name [, options]);</p>\n</li>\n</ul>\n<blockquote>\n<p>name 是 cookie 名，options 与创建 cookie 时所传一致</p>\n</blockquote>\n<h2 id=\"cookie的跨域设置\"><a href=\"#cookie的跨域设置\" class=\"headerlink\" title=\"cookie的跨域设置\"></a>cookie的跨域设置</h2><p>一牵扯到后台一定少不了跨域，cookie的设置有时也要牵扯到跨域设置。</p>\n<ul>\n<li>在服务器设置：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(cors(&#123;</span><br><span class=\"line\">      origin: &apos;*&apos;,</span><br><span class=\"line\">　    credentials: true</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<p>对应客户端的 xhrFields.withCredentials: true 参数，服务器端通过在响应 header 中设置 Access-Control-Allow-Credentials = true 来运行客户端携带证书式访问。通过对 Credentials 参数的设置，就可以保持跨域 Ajax 时的 Cookie。这里需要注意的是：</p>\n<p>服务器端 Access-Control-Allow-Credentials = true时，参数Access-Control-Allow-Origin 的值不能为 ‘*’ 。</p>\n<ul>\n<li>如果客户端AJAX请求需要发送cookie，则在AJAX中设置：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhrFields: &#123; withCredentials: true&#125;,</span><br><span class=\"line\">crossDomain: true,</span><br></pre></td></tr></table></figure>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>我们大致就完成了跨域的cookie设置，cookie的设置十分关键，应该还要加上加密等措施，之后再介绍。</p>\n<p>封面画师：<a href=\"https://www.pixiv.net/member.php?id=9685977\" target=\"_blank\" rel=\"noopener\">Nahaki</a></p>\n","thumbnail":"http://p6894qyp6.bkt.clouddn.com/69767582_p1_master1200.jpg","categories":[],"tags":[{"name":"node.js","path":"api/tags/node.js.json"}]}